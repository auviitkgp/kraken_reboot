#!/usr/bin/env python
PACKAGE = "control_system"

import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("offset", double_t, 0, "offset value", 0, 0, 100)

gen.add("Gain_i_px", double_t, 0, "Gain_I for pos_x",0, -200, 200)
gen.add("Gain_i_py", double_t, 0, "Gain_I for pos_y",0, -200, 200)
gen.add("Gain_i_pz", double_t, 0, "Gain_I for pos_z",0, -200, 200)

gen.add("Gain_px", double_t, 0, "Gain for pos_x",0, -200, 200)
gen.add("Gain_py", double_t, 0, "Gain for pos_y",0, -200, 200)
gen.add("Gain_pz", double_t, 0, "Gain for pos_z",0, -200, 200)

gen.add("Gain_vx", double_t, 0, "Gain for vel_x",0, -200, 200)
gen.add("Gain_vy", double_t, 0, "Gain for vel_y",0, -200, 200)
gen.add("Gain_vz", double_t, 0, "Gain for vel_z",0, -200, 200)

gen.add("Gain_ax", double_t, 0, "Gain for acc_x",0, -200, 200)
gen.add("Gain_ay", double_t, 0, "Gain for acc_y",0, -200, 200)
gen.add("Gain_az", double_t, 0, "Gain for acc_z",0, -200, 200)

gen.add("Gain_i_vx", double_t, 0, "Gain for pos_x",0, -200, 200)
gen.add("Gain_i_vy", double_t, 0, "Gain for pos_y",0, -200, 200)
gen.add("Gain_i_vz", double_t, 0, "Gain for pos_z",0, -200, 200)

gen.add("Gain_i_roll", double_t, 0, "Gain_I for roll",0, -200, 200)
gen.add("Gain_i_pitch", double_t, 0, "Gain_I for pitch",0, -200, 200)
gen.add("Gain_i_yaw", double_t, 0, "Gain_I for yaw",0, -200, 200)

gen.add("Gain_roll", double_t, 0, "Gain for roll",0, -200, 200)
gen.add("Gain_pitch", double_t, 0, "Gain for pitch",0, -200, 200)
gen.add("Gain_yaw", double_t, 0, "Gain for yaw",0, -200, 200)

gen.add("Gain_vel_roll", double_t, 0, "Gain for vel_roll",0, -200, 200)
gen.add("Gain_vel_pitch", double_t, 0, "Gain for vel_pitch",0, -200, 200)
gen.add("Gain_vel_yaw", double_t, 0, "Gain for vel_yaw",0, -200, 200)

gen.add("Gain_i_vel_roll", double_t, 0, "Gain_I for vel_roll",0, -200, 200)
gen.add("Gain_i_vel_pitch", double_t, 0, "Gain_I for vel_pitch",0, -200, 200)
gen.add("Gain_i_vel_yaw", double_t, 0, "Gain_I for vel_yaw",0, -200, 200)

gen.add("Gain_acc_roll", double_t, 0, "Gain for acc_roll",0, -200, 200)
gen.add("Gain_acc_pitch", double_t, 0, "Gain for acc_pitch",0, -200, 200)
gen.add("Gain_acc_yaw", double_t, 0, "Gain for acc_yaw",0, -200, 200)


# gen.add("bool_param", bool_t, 0, "A Boolean parameter", True)

# size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
#                   gen.const("Medium", int_t, 1, "A medium constant"),
#                   gen.const("Large", int_t, 2, "A large constant"),
#                   gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
#                   "An enum to set size")

# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "control_system", "params"))
